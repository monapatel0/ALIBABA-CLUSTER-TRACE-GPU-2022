{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "JzuI3wBdK7M5"
      },
      "outputs": [],
      "source": [
        "import pandas as pnd\n",
        "import numpy as np\n",
        "from sklearn.linear_model import LinearRegression\n",
        "from sklearn.metrics import mean_squared_error\n",
        "from sklearn.metrics import r2_score\n",
        "import matplotlib.pyplot as plt\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 46,
      "metadata": {
        "id": "L4NoXnn5Oqv2"
      },
      "outputs": [],
      "source": [
        "df=pnd.read_csv(\"/content/JPRP-23-12-22_82-R1.csv\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "AdYrqlE5O6Zf",
        "outputId": "40182738-3275-4dcc-eeba-f262aa590154"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                     job_name  task_name  \\\n",
              "0    54670e2998350a9f0e4868d5          6   \n",
              "1    54670e2998350a9f0e4868d5          6   \n",
              "2    54670e2998350a9f0e4868d5          6   \n",
              "3    54670e2998350a9f0e4868d5          6   \n",
              "4    54670e2998350a9f0e4868d5          6   \n",
              "..                        ...        ...   \n",
              "994  259758d8ce7dab19c47c1cf9          6   \n",
              "995  259758d8ce7dab19c47c1cf9          6   \n",
              "996  259758d8ce7dab19c47c1cf9          6   \n",
              "997  259758d8ce7dab19c47c1cf9          6   \n",
              "998  259758d8ce7dab19c47c1cf9          6   \n",
              "\n",
              "                                             inst_name  \\\n",
              "0    c47ee192deea8c5aa87d8d7c2e02120cd03f75304a69dd...   \n",
              "1    92759a73039692b2d3e0929cadf55f5b07b40d6582c36f...   \n",
              "2    b3e42abde4c35da06ff4746802b82678b1bf56b28efaa1...   \n",
              "3    d0f2e1f76ff463bcd08302370cc2f9bf0ec1333a3b25e3...   \n",
              "4    0243b1305fd38f228634b23f69de5ed5ce801360eeffdc...   \n",
              "..                                                 ...   \n",
              "994  d3c11b862634e6185c22d7c89fc08f667527b39779cb41...   \n",
              "995  a6812a028da978a3ab462f2ca15080b5c91799eb932cf2...   \n",
              "996  02e216e963305f5bf68e992721e2cf95d927bab59b1c04...   \n",
              "997  5f679bd45fd663ebe3f425102bff77290e9700765b8266...   \n",
              "998  166a8c34340bc933b112ae369c0bcb9ea43d0a8effb803...   \n",
              "\n",
              "                                           worker_name  \\\n",
              "0    05b1590648df3f4c6deea2496bbbefd4d3ae93347669f7...   \n",
              "1    cbc1bc591c53301bceafa44dc626288fd92d2fc5dca438...   \n",
              "2    09d41bf627188adc004b2db7c0a47578325952cc3340af...   \n",
              "3    1a631e8be3fd787c2891c15b9e9bac6df4f177efc9ec7b...   \n",
              "4    59aea81c00cccb5cd01ca2f7f72877d6bc73b427821986...   \n",
              "..                                                 ...   \n",
              "994  9f7742973dbe2b8d2b6bf1375abfd4e073f45450638fdc...   \n",
              "995  6909a44a6bbe9771cc32842680dca931c924aa1b48ae6c...   \n",
              "996  576c557d87df01c2a8d8533ecc7a067aa484710e8a23bb...   \n",
              "997  1cb644ae688049b36de4187db4f3cc6532a90bbdfabb35...   \n",
              "998  ba7440e699693c0cf3f4f4cfe16e195a95c3837065d81a...   \n",
              "\n",
              "                                               inst_id status  start_time  \\\n",
              "0    68889727c2257f702108d185e5eed342a39807a2893d4b...      3   3272995.0   \n",
              "1    68889727c2257f702108d185e5eed342a39807a2893d4b...      3   3272995.0   \n",
              "2    68889727c2257f702108d185e5eed342a39807a2893d4b...      3   3272995.0   \n",
              "3    68889727c2257f702108d185e5eed342a39807a2893d4b...      3   3272995.0   \n",
              "4    68889727c2257f702108d185e5eed342a39807a2893d4b...      3   3272995.0   \n",
              "..                                                 ...    ...         ...   \n",
              "994  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...      3   3547830.0   \n",
              "995  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...      3   3547831.0   \n",
              "996  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...      3   3547832.0   \n",
              "997  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...      3   3547831.0   \n",
              "998  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...      3   3547832.0   \n",
              "\n",
              "      end_time                   machine  \n",
              "0    3273065.0  165261853e188ca69c4fbcdf  \n",
              "1    3273056.0  31dbf829549b10917e7193a6  \n",
              "2    3273067.0  31dbf829549b10917e7193a6  \n",
              "3    3273058.0  3765d45e2eca88d1d1da7cef  \n",
              "4    3273059.0  c0d6760f6248ea8260e36fa5  \n",
              "..         ...                       ...  \n",
              "994  3550678.0  b2897296e9402cce1ac00e73  \n",
              "995  3550928.0  64ce8199950afc63fd21fe96  \n",
              "996  3550654.0  6e5816c3b9334f11d9e215b1  \n",
              "997  3550743.0  c3a67200eaebd3d87534419d  \n",
              "998  3550809.0  e884aa64a6e22a1779f6f410  \n",
              "\n",
              "[999 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4d7bd790-b546-4130-b314-efc2159f1e9f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>job_name</th>\n",
              "      <th>task_name</th>\n",
              "      <th>inst_name</th>\n",
              "      <th>worker_name</th>\n",
              "      <th>inst_id</th>\n",
              "      <th>status</th>\n",
              "      <th>start_time</th>\n",
              "      <th>end_time</th>\n",
              "      <th>machine</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>c47ee192deea8c5aa87d8d7c2e02120cd03f75304a69dd...</td>\n",
              "      <td>05b1590648df3f4c6deea2496bbbefd4d3ae93347669f7...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273065.0</td>\n",
              "      <td>165261853e188ca69c4fbcdf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>92759a73039692b2d3e0929cadf55f5b07b40d6582c36f...</td>\n",
              "      <td>cbc1bc591c53301bceafa44dc626288fd92d2fc5dca438...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273056.0</td>\n",
              "      <td>31dbf829549b10917e7193a6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>b3e42abde4c35da06ff4746802b82678b1bf56b28efaa1...</td>\n",
              "      <td>09d41bf627188adc004b2db7c0a47578325952cc3340af...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273067.0</td>\n",
              "      <td>31dbf829549b10917e7193a6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>d0f2e1f76ff463bcd08302370cc2f9bf0ec1333a3b25e3...</td>\n",
              "      <td>1a631e8be3fd787c2891c15b9e9bac6df4f177efc9ec7b...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273058.0</td>\n",
              "      <td>3765d45e2eca88d1d1da7cef</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>0243b1305fd38f228634b23f69de5ed5ce801360eeffdc...</td>\n",
              "      <td>59aea81c00cccb5cd01ca2f7f72877d6bc73b427821986...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273059.0</td>\n",
              "      <td>c0d6760f6248ea8260e36fa5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>994</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>d3c11b862634e6185c22d7c89fc08f667527b39779cb41...</td>\n",
              "      <td>9f7742973dbe2b8d2b6bf1375abfd4e073f45450638fdc...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547830.0</td>\n",
              "      <td>3550678.0</td>\n",
              "      <td>b2897296e9402cce1ac00e73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>995</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>a6812a028da978a3ab462f2ca15080b5c91799eb932cf2...</td>\n",
              "      <td>6909a44a6bbe9771cc32842680dca931c924aa1b48ae6c...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547831.0</td>\n",
              "      <td>3550928.0</td>\n",
              "      <td>64ce8199950afc63fd21fe96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>996</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>02e216e963305f5bf68e992721e2cf95d927bab59b1c04...</td>\n",
              "      <td>576c557d87df01c2a8d8533ecc7a067aa484710e8a23bb...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547832.0</td>\n",
              "      <td>3550654.0</td>\n",
              "      <td>6e5816c3b9334f11d9e215b1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>997</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>5f679bd45fd663ebe3f425102bff77290e9700765b8266...</td>\n",
              "      <td>1cb644ae688049b36de4187db4f3cc6532a90bbdfabb35...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547831.0</td>\n",
              "      <td>3550743.0</td>\n",
              "      <td>c3a67200eaebd3d87534419d</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>998</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>166a8c34340bc933b112ae369c0bcb9ea43d0a8effb803...</td>\n",
              "      <td>ba7440e699693c0cf3f4f4cfe16e195a95c3837065d81a...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547832.0</td>\n",
              "      <td>3550809.0</td>\n",
              "      <td>e884aa64a6e22a1779f6f410</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>999 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4d7bd790-b546-4130-b314-efc2159f1e9f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4d7bd790-b546-4130-b314-efc2159f1e9f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4d7bd790-b546-4130-b314-efc2159f1e9f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ],
      "source": [
        "df"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "W8MxN0Cwqrve"
      },
      "source": [
        "Descriptive analysis"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "0hNRhshwO7ab",
        "outputId": "64cd5de8-0901-46d8-8e04-35b740339c84"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         start_time      end_time\n",
              "count  9.660000e+02  9.850000e+02\n",
              "mean   2.528277e+06  2.558755e+06\n",
              "std    9.115939e+05  9.204741e+05\n",
              "min    1.440387e+06  1.440410e+06\n",
              "25%    1.457995e+06  1.459302e+06\n",
              "50%    3.273582e+06  3.274698e+06\n",
              "75%    3.273583e+06  3.274724e+06\n",
              "max    3.588304e+06  3.590547e+06"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a6315243-b6d9-4825-992d-284fae7e56c6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>start_time</th>\n",
              "      <th>end_time</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>9.660000e+02</td>\n",
              "      <td>9.850000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>2.528277e+06</td>\n",
              "      <td>2.558755e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>9.115939e+05</td>\n",
              "      <td>9.204741e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.440387e+06</td>\n",
              "      <td>1.440410e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.457995e+06</td>\n",
              "      <td>1.459302e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>3.273582e+06</td>\n",
              "      <td>3.274698e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>3.273583e+06</td>\n",
              "      <td>3.274724e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>3.588304e+06</td>\n",
              "      <td>3.590547e+06</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a6315243-b6d9-4825-992d-284fae7e56c6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a6315243-b6d9-4825-992d-284fae7e56c6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a6315243-b6d9-4825-992d-284fae7e56c6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ],
      "source": [
        "df.describe()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "WC5jHIIlS4XI",
        "outputId": "a9b48fc3-6298-45d5-d110-90adec37577e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   job_name task_name  \\\n",
              "0  54670e2998350a9f0e4868d5    worker   \n",
              "1  54670e2998350a9f0e4868d5    worker   \n",
              "2  54670e2998350a9f0e4868d5    worker   \n",
              "3  54670e2998350a9f0e4868d5    worker   \n",
              "4  54670e2998350a9f0e4868d5    worker   \n",
              "\n",
              "                                           inst_name  \\\n",
              "0  c47ee192deea8c5aa87d8d7c2e02120cd03f75304a69dd...   \n",
              "1  92759a73039692b2d3e0929cadf55f5b07b40d6582c36f...   \n",
              "2  b3e42abde4c35da06ff4746802b82678b1bf56b28efaa1...   \n",
              "3  d0f2e1f76ff463bcd08302370cc2f9bf0ec1333a3b25e3...   \n",
              "4  0243b1305fd38f228634b23f69de5ed5ce801360eeffdc...   \n",
              "\n",
              "                                         worker_name  \\\n",
              "0  05b1590648df3f4c6deea2496bbbefd4d3ae93347669f7...   \n",
              "1  cbc1bc591c53301bceafa44dc626288fd92d2fc5dca438...   \n",
              "2  09d41bf627188adc004b2db7c0a47578325952cc3340af...   \n",
              "3  1a631e8be3fd787c2891c15b9e9bac6df4f177efc9ec7b...   \n",
              "4  59aea81c00cccb5cd01ca2f7f72877d6bc73b427821986...   \n",
              "\n",
              "                                             inst_id      status  start_time  \\\n",
              "0  68889727c2257f702108d185e5eed342a39807a2893d4b...  Terminated   3272995.0   \n",
              "1  68889727c2257f702108d185e5eed342a39807a2893d4b...  Terminated   3272995.0   \n",
              "2  68889727c2257f702108d185e5eed342a39807a2893d4b...  Terminated   3272995.0   \n",
              "3  68889727c2257f702108d185e5eed342a39807a2893d4b...  Terminated   3272995.0   \n",
              "4  68889727c2257f702108d185e5eed342a39807a2893d4b...  Terminated   3272995.0   \n",
              "\n",
              "    end_time                   machine  \n",
              "0  3273065.0  165261853e188ca69c4fbcdf  \n",
              "1  3273056.0  31dbf829549b10917e7193a6  \n",
              "2  3273067.0  31dbf829549b10917e7193a6  \n",
              "3  3273058.0  3765d45e2eca88d1d1da7cef  \n",
              "4  3273059.0  c0d6760f6248ea8260e36fa5  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-80ca62ac-2b79-4283-b263-ac661bdebcd0\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>job_name</th>\n",
              "      <th>task_name</th>\n",
              "      <th>inst_name</th>\n",
              "      <th>worker_name</th>\n",
              "      <th>inst_id</th>\n",
              "      <th>status</th>\n",
              "      <th>start_time</th>\n",
              "      <th>end_time</th>\n",
              "      <th>machine</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>worker</td>\n",
              "      <td>c47ee192deea8c5aa87d8d7c2e02120cd03f75304a69dd...</td>\n",
              "      <td>05b1590648df3f4c6deea2496bbbefd4d3ae93347669f7...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>Terminated</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273065.0</td>\n",
              "      <td>165261853e188ca69c4fbcdf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>worker</td>\n",
              "      <td>92759a73039692b2d3e0929cadf55f5b07b40d6582c36f...</td>\n",
              "      <td>cbc1bc591c53301bceafa44dc626288fd92d2fc5dca438...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>Terminated</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273056.0</td>\n",
              "      <td>31dbf829549b10917e7193a6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>worker</td>\n",
              "      <td>b3e42abde4c35da06ff4746802b82678b1bf56b28efaa1...</td>\n",
              "      <td>09d41bf627188adc004b2db7c0a47578325952cc3340af...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>Terminated</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273067.0</td>\n",
              "      <td>31dbf829549b10917e7193a6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>worker</td>\n",
              "      <td>d0f2e1f76ff463bcd08302370cc2f9bf0ec1333a3b25e3...</td>\n",
              "      <td>1a631e8be3fd787c2891c15b9e9bac6df4f177efc9ec7b...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>Terminated</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273058.0</td>\n",
              "      <td>3765d45e2eca88d1d1da7cef</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>worker</td>\n",
              "      <td>0243b1305fd38f228634b23f69de5ed5ce801360eeffdc...</td>\n",
              "      <td>59aea81c00cccb5cd01ca2f7f72877d6bc73b427821986...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>Terminated</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273059.0</td>\n",
              "      <td>c0d6760f6248ea8260e36fa5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80ca62ac-2b79-4283-b263-ac661bdebcd0')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-80ca62ac-2b79-4283-b263-ac661bdebcd0 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-80ca62ac-2b79-4283-b263-ac661bdebcd0');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ],
      "source": [
        "df.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "e0WT3EvXS6en",
        "outputId": "1d194700-f71a-4d5d-dd3f-e1a92953dbfa"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "job_name        0\n",
              "task_name       0\n",
              "inst_name       0\n",
              "worker_name     0\n",
              "inst_id         0\n",
              "status          0\n",
              "start_time     33\n",
              "end_time       14\n",
              "machine         0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ],
      "source": [
        "df.isna().sum()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9q0nHb5dgTq2",
        "outputId": "5e4a32f5-24c2-465f-dc8f-3d46b093fae9"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 999 entries, 0 to 998\n",
            "Data columns (total 9 columns):\n",
            " #   Column       Non-Null Count  Dtype  \n",
            "---  ------       --------------  -----  \n",
            " 0   job_name     999 non-null    object \n",
            " 1   task_name    999 non-null    object \n",
            " 2   inst_name    999 non-null    object \n",
            " 3   worker_name  999 non-null    object \n",
            " 4   inst_id      999 non-null    object \n",
            " 5   status       999 non-null    object \n",
            " 6   start_time   966 non-null    float64\n",
            " 7   end_time     985 non-null    float64\n",
            " 8   machine      999 non-null    object \n",
            "dtypes: float64(2), object(7)\n",
            "memory usage: 70.4+ KB\n"
          ]
        }
      ],
      "source": [
        "df.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "jMaKurprPNT8"
      },
      "outputs": [],
      "source": [
        "from sklearn import preprocessing"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "O8amayhtYbX-"
      },
      "outputs": [],
      "source": [
        "label_encoder=preprocessing.LabelEncoder()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "dK4mG9WDX3P-"
      },
      "outputs": [],
      "source": [
        "df['task_name']=label_encoder.fit_transform(df['task_name']) "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yVbeEe7gYuUe",
        "outputId": "d720ba85-9b95-405e-85c1-f63b088548ca"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([6, 5, 4, 1, 7, 2, 0, 3])"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ],
      "source": [
        "df['task_name'].unique()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "8zDSsIMcY2a2"
      },
      "outputs": [],
      "source": [
        "df['status']=label_encoder.fit_transform(df['status']) "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "VFEioN9flB3N",
        "outputId": "ba0d297d-b2ef-429f-8bc7-fe4411817398"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                     job_name  task_name  \\\n",
              "0    54670e2998350a9f0e4868d5          6   \n",
              "1    54670e2998350a9f0e4868d5          6   \n",
              "2    54670e2998350a9f0e4868d5          6   \n",
              "3    54670e2998350a9f0e4868d5          6   \n",
              "4    54670e2998350a9f0e4868d5          6   \n",
              "..                        ...        ...   \n",
              "994  259758d8ce7dab19c47c1cf9          6   \n",
              "995  259758d8ce7dab19c47c1cf9          6   \n",
              "996  259758d8ce7dab19c47c1cf9          6   \n",
              "997  259758d8ce7dab19c47c1cf9          6   \n",
              "998  259758d8ce7dab19c47c1cf9          6   \n",
              "\n",
              "                                             inst_name  \\\n",
              "0    c47ee192deea8c5aa87d8d7c2e02120cd03f75304a69dd...   \n",
              "1    92759a73039692b2d3e0929cadf55f5b07b40d6582c36f...   \n",
              "2    b3e42abde4c35da06ff4746802b82678b1bf56b28efaa1...   \n",
              "3    d0f2e1f76ff463bcd08302370cc2f9bf0ec1333a3b25e3...   \n",
              "4    0243b1305fd38f228634b23f69de5ed5ce801360eeffdc...   \n",
              "..                                                 ...   \n",
              "994  d3c11b862634e6185c22d7c89fc08f667527b39779cb41...   \n",
              "995  a6812a028da978a3ab462f2ca15080b5c91799eb932cf2...   \n",
              "996  02e216e963305f5bf68e992721e2cf95d927bab59b1c04...   \n",
              "997  5f679bd45fd663ebe3f425102bff77290e9700765b8266...   \n",
              "998  166a8c34340bc933b112ae369c0bcb9ea43d0a8effb803...   \n",
              "\n",
              "                                           worker_name  \\\n",
              "0    05b1590648df3f4c6deea2496bbbefd4d3ae93347669f7...   \n",
              "1    cbc1bc591c53301bceafa44dc626288fd92d2fc5dca438...   \n",
              "2    09d41bf627188adc004b2db7c0a47578325952cc3340af...   \n",
              "3    1a631e8be3fd787c2891c15b9e9bac6df4f177efc9ec7b...   \n",
              "4    59aea81c00cccb5cd01ca2f7f72877d6bc73b427821986...   \n",
              "..                                                 ...   \n",
              "994  9f7742973dbe2b8d2b6bf1375abfd4e073f45450638fdc...   \n",
              "995  6909a44a6bbe9771cc32842680dca931c924aa1b48ae6c...   \n",
              "996  576c557d87df01c2a8d8533ecc7a067aa484710e8a23bb...   \n",
              "997  1cb644ae688049b36de4187db4f3cc6532a90bbdfabb35...   \n",
              "998  ba7440e699693c0cf3f4f4cfe16e195a95c3837065d81a...   \n",
              "\n",
              "                                               inst_id  status  start_time  \\\n",
              "0    68889727c2257f702108d185e5eed342a39807a2893d4b...       3   3272995.0   \n",
              "1    68889727c2257f702108d185e5eed342a39807a2893d4b...       3   3272995.0   \n",
              "2    68889727c2257f702108d185e5eed342a39807a2893d4b...       3   3272995.0   \n",
              "3    68889727c2257f702108d185e5eed342a39807a2893d4b...       3   3272995.0   \n",
              "4    68889727c2257f702108d185e5eed342a39807a2893d4b...       3   3272995.0   \n",
              "..                                                 ...     ...         ...   \n",
              "994  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...       3   3547830.0   \n",
              "995  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...       3   3547831.0   \n",
              "996  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...       3   3547832.0   \n",
              "997  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...       3   3547831.0   \n",
              "998  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...       3   3547832.0   \n",
              "\n",
              "      end_time                   machine  \n",
              "0    3273065.0  165261853e188ca69c4fbcdf  \n",
              "1    3273056.0  31dbf829549b10917e7193a6  \n",
              "2    3273067.0  31dbf829549b10917e7193a6  \n",
              "3    3273058.0  3765d45e2eca88d1d1da7cef  \n",
              "4    3273059.0  c0d6760f6248ea8260e36fa5  \n",
              "..         ...                       ...  \n",
              "994  3550678.0  b2897296e9402cce1ac00e73  \n",
              "995  3550928.0  64ce8199950afc63fd21fe96  \n",
              "996  3550654.0  6e5816c3b9334f11d9e215b1  \n",
              "997  3550743.0  c3a67200eaebd3d87534419d  \n",
              "998  3550809.0  e884aa64a6e22a1779f6f410  \n",
              "\n",
              "[999 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e7cb0c2c-9b92-4192-b098-2f2c45bf03bb\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>job_name</th>\n",
              "      <th>task_name</th>\n",
              "      <th>inst_name</th>\n",
              "      <th>worker_name</th>\n",
              "      <th>inst_id</th>\n",
              "      <th>status</th>\n",
              "      <th>start_time</th>\n",
              "      <th>end_time</th>\n",
              "      <th>machine</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>c47ee192deea8c5aa87d8d7c2e02120cd03f75304a69dd...</td>\n",
              "      <td>05b1590648df3f4c6deea2496bbbefd4d3ae93347669f7...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273065.0</td>\n",
              "      <td>165261853e188ca69c4fbcdf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>92759a73039692b2d3e0929cadf55f5b07b40d6582c36f...</td>\n",
              "      <td>cbc1bc591c53301bceafa44dc626288fd92d2fc5dca438...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273056.0</td>\n",
              "      <td>31dbf829549b10917e7193a6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>b3e42abde4c35da06ff4746802b82678b1bf56b28efaa1...</td>\n",
              "      <td>09d41bf627188adc004b2db7c0a47578325952cc3340af...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273067.0</td>\n",
              "      <td>31dbf829549b10917e7193a6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>d0f2e1f76ff463bcd08302370cc2f9bf0ec1333a3b25e3...</td>\n",
              "      <td>1a631e8be3fd787c2891c15b9e9bac6df4f177efc9ec7b...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273058.0</td>\n",
              "      <td>3765d45e2eca88d1d1da7cef</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>0243b1305fd38f228634b23f69de5ed5ce801360eeffdc...</td>\n",
              "      <td>59aea81c00cccb5cd01ca2f7f72877d6bc73b427821986...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273059.0</td>\n",
              "      <td>c0d6760f6248ea8260e36fa5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>994</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>d3c11b862634e6185c22d7c89fc08f667527b39779cb41...</td>\n",
              "      <td>9f7742973dbe2b8d2b6bf1375abfd4e073f45450638fdc...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547830.0</td>\n",
              "      <td>3550678.0</td>\n",
              "      <td>b2897296e9402cce1ac00e73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>995</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>a6812a028da978a3ab462f2ca15080b5c91799eb932cf2...</td>\n",
              "      <td>6909a44a6bbe9771cc32842680dca931c924aa1b48ae6c...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547831.0</td>\n",
              "      <td>3550928.0</td>\n",
              "      <td>64ce8199950afc63fd21fe96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>996</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>02e216e963305f5bf68e992721e2cf95d927bab59b1c04...</td>\n",
              "      <td>576c557d87df01c2a8d8533ecc7a067aa484710e8a23bb...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547832.0</td>\n",
              "      <td>3550654.0</td>\n",
              "      <td>6e5816c3b9334f11d9e215b1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>997</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>5f679bd45fd663ebe3f425102bff77290e9700765b8266...</td>\n",
              "      <td>1cb644ae688049b36de4187db4f3cc6532a90bbdfabb35...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547831.0</td>\n",
              "      <td>3550743.0</td>\n",
              "      <td>c3a67200eaebd3d87534419d</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>998</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>166a8c34340bc933b112ae369c0bcb9ea43d0a8effb803...</td>\n",
              "      <td>ba7440e699693c0cf3f4f4cfe16e195a95c3837065d81a...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547832.0</td>\n",
              "      <td>3550809.0</td>\n",
              "      <td>e884aa64a6e22a1779f6f410</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>999 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e7cb0c2c-9b92-4192-b098-2f2c45bf03bb')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e7cb0c2c-9b92-4192-b098-2f2c45bf03bb button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e7cb0c2c-9b92-4192-b098-2f2c45bf03bb');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ],
      "source": [
        "df"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "h2dE-j9YY_fN",
        "outputId": "24c4366d-3206-4dbf-fb92-488a0c794a67"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([3, 0, 2, 1])"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ],
      "source": [
        "df['status'].unique()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "mvaypoNlqls4"
      },
      "source": [
        "Correlation"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 175
        },
        "id": "Df1lFhkeZCVF",
        "outputId": "dc8778d1-da4e-4670-d5cb-22ff94b82b7f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            task_name    status  start_time  end_time\n",
              "task_name    1.000000 -0.144318    0.975399  0.975324\n",
              "status      -0.144318  1.000000   -0.090515 -0.191964\n",
              "start_time   0.975399 -0.090515    1.000000  0.999579\n",
              "end_time     0.975324 -0.191964    0.999579  1.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c566c1e3-e3ba-40f8-a6c4-673dcf915f98\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>task_name</th>\n",
              "      <th>status</th>\n",
              "      <th>start_time</th>\n",
              "      <th>end_time</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>task_name</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.144318</td>\n",
              "      <td>0.975399</td>\n",
              "      <td>0.975324</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>status</th>\n",
              "      <td>-0.144318</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.090515</td>\n",
              "      <td>-0.191964</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>start_time</th>\n",
              "      <td>0.975399</td>\n",
              "      <td>-0.090515</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.999579</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>end_time</th>\n",
              "      <td>0.975324</td>\n",
              "      <td>-0.191964</td>\n",
              "      <td>0.999579</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c566c1e3-e3ba-40f8-a6c4-673dcf915f98')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c566c1e3-e3ba-40f8-a6c4-673dcf915f98 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c566c1e3-e3ba-40f8-a6c4-673dcf915f98');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ],
      "source": [
        "df.corr()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "XssEKcqWgDZX",
        "outputId": "58f7c7da-eaf0-4768-8d6f-66cea65cdd2c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                     job_name  task_name  \\\n",
              "0    54670e2998350a9f0e4868d5          6   \n",
              "1    54670e2998350a9f0e4868d5          6   \n",
              "2    54670e2998350a9f0e4868d5          6   \n",
              "3    54670e2998350a9f0e4868d5          6   \n",
              "4    54670e2998350a9f0e4868d5          6   \n",
              "..                        ...        ...   \n",
              "994  259758d8ce7dab19c47c1cf9          6   \n",
              "995  259758d8ce7dab19c47c1cf9          6   \n",
              "996  259758d8ce7dab19c47c1cf9          6   \n",
              "997  259758d8ce7dab19c47c1cf9          6   \n",
              "998  259758d8ce7dab19c47c1cf9          6   \n",
              "\n",
              "                                             inst_name  \\\n",
              "0    c47ee192deea8c5aa87d8d7c2e02120cd03f75304a69dd...   \n",
              "1    92759a73039692b2d3e0929cadf55f5b07b40d6582c36f...   \n",
              "2    b3e42abde4c35da06ff4746802b82678b1bf56b28efaa1...   \n",
              "3    d0f2e1f76ff463bcd08302370cc2f9bf0ec1333a3b25e3...   \n",
              "4    0243b1305fd38f228634b23f69de5ed5ce801360eeffdc...   \n",
              "..                                                 ...   \n",
              "994  d3c11b862634e6185c22d7c89fc08f667527b39779cb41...   \n",
              "995  a6812a028da978a3ab462f2ca15080b5c91799eb932cf2...   \n",
              "996  02e216e963305f5bf68e992721e2cf95d927bab59b1c04...   \n",
              "997  5f679bd45fd663ebe3f425102bff77290e9700765b8266...   \n",
              "998  166a8c34340bc933b112ae369c0bcb9ea43d0a8effb803...   \n",
              "\n",
              "                                           worker_name  \\\n",
              "0    05b1590648df3f4c6deea2496bbbefd4d3ae93347669f7...   \n",
              "1    cbc1bc591c53301bceafa44dc626288fd92d2fc5dca438...   \n",
              "2    09d41bf627188adc004b2db7c0a47578325952cc3340af...   \n",
              "3    1a631e8be3fd787c2891c15b9e9bac6df4f177efc9ec7b...   \n",
              "4    59aea81c00cccb5cd01ca2f7f72877d6bc73b427821986...   \n",
              "..                                                 ...   \n",
              "994  9f7742973dbe2b8d2b6bf1375abfd4e073f45450638fdc...   \n",
              "995  6909a44a6bbe9771cc32842680dca931c924aa1b48ae6c...   \n",
              "996  576c557d87df01c2a8d8533ecc7a067aa484710e8a23bb...   \n",
              "997  1cb644ae688049b36de4187db4f3cc6532a90bbdfabb35...   \n",
              "998  ba7440e699693c0cf3f4f4cfe16e195a95c3837065d81a...   \n",
              "\n",
              "                                               inst_id  status  start_time  \\\n",
              "0    68889727c2257f702108d185e5eed342a39807a2893d4b...       3   3272995.0   \n",
              "1    68889727c2257f702108d185e5eed342a39807a2893d4b...       3   3272995.0   \n",
              "2    68889727c2257f702108d185e5eed342a39807a2893d4b...       3   3272995.0   \n",
              "3    68889727c2257f702108d185e5eed342a39807a2893d4b...       3   3272995.0   \n",
              "4    68889727c2257f702108d185e5eed342a39807a2893d4b...       3   3272995.0   \n",
              "..                                                 ...     ...         ...   \n",
              "994  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...       3   3547830.0   \n",
              "995  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...       3   3547831.0   \n",
              "996  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...       3   3547832.0   \n",
              "997  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...       3   3547831.0   \n",
              "998  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...       3   3547832.0   \n",
              "\n",
              "      end_time                   machine  \n",
              "0    3273065.0  165261853e188ca69c4fbcdf  \n",
              "1    3273056.0  31dbf829549b10917e7193a6  \n",
              "2    3273067.0  31dbf829549b10917e7193a6  \n",
              "3    3273058.0  3765d45e2eca88d1d1da7cef  \n",
              "4    3273059.0  c0d6760f6248ea8260e36fa5  \n",
              "..         ...                       ...  \n",
              "994  3550678.0  b2897296e9402cce1ac00e73  \n",
              "995  3550928.0  64ce8199950afc63fd21fe96  \n",
              "996  3550654.0  6e5816c3b9334f11d9e215b1  \n",
              "997  3550743.0  c3a67200eaebd3d87534419d  \n",
              "998  3550809.0  e884aa64a6e22a1779f6f410  \n",
              "\n",
              "[999 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-201028d3-2b28-4055-92b6-dad55ef11354\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>job_name</th>\n",
              "      <th>task_name</th>\n",
              "      <th>inst_name</th>\n",
              "      <th>worker_name</th>\n",
              "      <th>inst_id</th>\n",
              "      <th>status</th>\n",
              "      <th>start_time</th>\n",
              "      <th>end_time</th>\n",
              "      <th>machine</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>c47ee192deea8c5aa87d8d7c2e02120cd03f75304a69dd...</td>\n",
              "      <td>05b1590648df3f4c6deea2496bbbefd4d3ae93347669f7...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273065.0</td>\n",
              "      <td>165261853e188ca69c4fbcdf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>92759a73039692b2d3e0929cadf55f5b07b40d6582c36f...</td>\n",
              "      <td>cbc1bc591c53301bceafa44dc626288fd92d2fc5dca438...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273056.0</td>\n",
              "      <td>31dbf829549b10917e7193a6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>b3e42abde4c35da06ff4746802b82678b1bf56b28efaa1...</td>\n",
              "      <td>09d41bf627188adc004b2db7c0a47578325952cc3340af...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273067.0</td>\n",
              "      <td>31dbf829549b10917e7193a6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>d0f2e1f76ff463bcd08302370cc2f9bf0ec1333a3b25e3...</td>\n",
              "      <td>1a631e8be3fd787c2891c15b9e9bac6df4f177efc9ec7b...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273058.0</td>\n",
              "      <td>3765d45e2eca88d1d1da7cef</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>0243b1305fd38f228634b23f69de5ed5ce801360eeffdc...</td>\n",
              "      <td>59aea81c00cccb5cd01ca2f7f72877d6bc73b427821986...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273059.0</td>\n",
              "      <td>c0d6760f6248ea8260e36fa5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>994</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>d3c11b862634e6185c22d7c89fc08f667527b39779cb41...</td>\n",
              "      <td>9f7742973dbe2b8d2b6bf1375abfd4e073f45450638fdc...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547830.0</td>\n",
              "      <td>3550678.0</td>\n",
              "      <td>b2897296e9402cce1ac00e73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>995</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>a6812a028da978a3ab462f2ca15080b5c91799eb932cf2...</td>\n",
              "      <td>6909a44a6bbe9771cc32842680dca931c924aa1b48ae6c...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547831.0</td>\n",
              "      <td>3550928.0</td>\n",
              "      <td>64ce8199950afc63fd21fe96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>996</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>02e216e963305f5bf68e992721e2cf95d927bab59b1c04...</td>\n",
              "      <td>576c557d87df01c2a8d8533ecc7a067aa484710e8a23bb...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547832.0</td>\n",
              "      <td>3550654.0</td>\n",
              "      <td>6e5816c3b9334f11d9e215b1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>997</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>5f679bd45fd663ebe3f425102bff77290e9700765b8266...</td>\n",
              "      <td>1cb644ae688049b36de4187db4f3cc6532a90bbdfabb35...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547831.0</td>\n",
              "      <td>3550743.0</td>\n",
              "      <td>c3a67200eaebd3d87534419d</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>998</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>166a8c34340bc933b112ae369c0bcb9ea43d0a8effb803...</td>\n",
              "      <td>ba7440e699693c0cf3f4f4cfe16e195a95c3837065d81a...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547832.0</td>\n",
              "      <td>3550809.0</td>\n",
              "      <td>e884aa64a6e22a1779f6f410</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>999 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-201028d3-2b28-4055-92b6-dad55ef11354')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-201028d3-2b28-4055-92b6-dad55ef11354 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-201028d3-2b28-4055-92b6-dad55ef11354');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ],
      "source": [
        "df.bfill()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "fkSx4K61g2CW"
      },
      "outputs": [],
      "source": [
        "df = df.replace(np.nan, 0)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "1pgOS0f8jJLr",
        "outputId": "f4831348-0d36-4629-aff5-00b80e7173a3"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                     job_name  task_name  \\\n",
              "0    54670e2998350a9f0e4868d5          6   \n",
              "1    54670e2998350a9f0e4868d5          6   \n",
              "2    54670e2998350a9f0e4868d5          6   \n",
              "3    54670e2998350a9f0e4868d5          6   \n",
              "4    54670e2998350a9f0e4868d5          6   \n",
              "..                        ...        ...   \n",
              "994  259758d8ce7dab19c47c1cf9          6   \n",
              "995  259758d8ce7dab19c47c1cf9          6   \n",
              "996  259758d8ce7dab19c47c1cf9          6   \n",
              "997  259758d8ce7dab19c47c1cf9          6   \n",
              "998  259758d8ce7dab19c47c1cf9          6   \n",
              "\n",
              "                                             inst_name  \\\n",
              "0    c47ee192deea8c5aa87d8d7c2e02120cd03f75304a69dd...   \n",
              "1    92759a73039692b2d3e0929cadf55f5b07b40d6582c36f...   \n",
              "2    b3e42abde4c35da06ff4746802b82678b1bf56b28efaa1...   \n",
              "3    d0f2e1f76ff463bcd08302370cc2f9bf0ec1333a3b25e3...   \n",
              "4    0243b1305fd38f228634b23f69de5ed5ce801360eeffdc...   \n",
              "..                                                 ...   \n",
              "994  d3c11b862634e6185c22d7c89fc08f667527b39779cb41...   \n",
              "995  a6812a028da978a3ab462f2ca15080b5c91799eb932cf2...   \n",
              "996  02e216e963305f5bf68e992721e2cf95d927bab59b1c04...   \n",
              "997  5f679bd45fd663ebe3f425102bff77290e9700765b8266...   \n",
              "998  166a8c34340bc933b112ae369c0bcb9ea43d0a8effb803...   \n",
              "\n",
              "                                           worker_name  \\\n",
              "0    05b1590648df3f4c6deea2496bbbefd4d3ae93347669f7...   \n",
              "1    cbc1bc591c53301bceafa44dc626288fd92d2fc5dca438...   \n",
              "2    09d41bf627188adc004b2db7c0a47578325952cc3340af...   \n",
              "3    1a631e8be3fd787c2891c15b9e9bac6df4f177efc9ec7b...   \n",
              "4    59aea81c00cccb5cd01ca2f7f72877d6bc73b427821986...   \n",
              "..                                                 ...   \n",
              "994  9f7742973dbe2b8d2b6bf1375abfd4e073f45450638fdc...   \n",
              "995  6909a44a6bbe9771cc32842680dca931c924aa1b48ae6c...   \n",
              "996  576c557d87df01c2a8d8533ecc7a067aa484710e8a23bb...   \n",
              "997  1cb644ae688049b36de4187db4f3cc6532a90bbdfabb35...   \n",
              "998  ba7440e699693c0cf3f4f4cfe16e195a95c3837065d81a...   \n",
              "\n",
              "                                               inst_id  status  start_time  \\\n",
              "0    68889727c2257f702108d185e5eed342a39807a2893d4b...       3   3272995.0   \n",
              "1    68889727c2257f702108d185e5eed342a39807a2893d4b...       3   3272995.0   \n",
              "2    68889727c2257f702108d185e5eed342a39807a2893d4b...       3   3272995.0   \n",
              "3    68889727c2257f702108d185e5eed342a39807a2893d4b...       3   3272995.0   \n",
              "4    68889727c2257f702108d185e5eed342a39807a2893d4b...       3   3272995.0   \n",
              "..                                                 ...     ...         ...   \n",
              "994  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...       3   3547830.0   \n",
              "995  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...       3   3547831.0   \n",
              "996  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...       3   3547832.0   \n",
              "997  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...       3   3547831.0   \n",
              "998  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...       3   3547832.0   \n",
              "\n",
              "      end_time                   machine  \n",
              "0    3273065.0  165261853e188ca69c4fbcdf  \n",
              "1    3273056.0  31dbf829549b10917e7193a6  \n",
              "2    3273067.0  31dbf829549b10917e7193a6  \n",
              "3    3273058.0  3765d45e2eca88d1d1da7cef  \n",
              "4    3273059.0  c0d6760f6248ea8260e36fa5  \n",
              "..         ...                       ...  \n",
              "994  3550678.0  b2897296e9402cce1ac00e73  \n",
              "995  3550928.0  64ce8199950afc63fd21fe96  \n",
              "996  3550654.0  6e5816c3b9334f11d9e215b1  \n",
              "997  3550743.0  c3a67200eaebd3d87534419d  \n",
              "998  3550809.0  e884aa64a6e22a1779f6f410  \n",
              "\n",
              "[999 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-53c770b6-98d1-46d6-8605-937924a9b564\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>job_name</th>\n",
              "      <th>task_name</th>\n",
              "      <th>inst_name</th>\n",
              "      <th>worker_name</th>\n",
              "      <th>inst_id</th>\n",
              "      <th>status</th>\n",
              "      <th>start_time</th>\n",
              "      <th>end_time</th>\n",
              "      <th>machine</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>c47ee192deea8c5aa87d8d7c2e02120cd03f75304a69dd...</td>\n",
              "      <td>05b1590648df3f4c6deea2496bbbefd4d3ae93347669f7...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273065.0</td>\n",
              "      <td>165261853e188ca69c4fbcdf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>92759a73039692b2d3e0929cadf55f5b07b40d6582c36f...</td>\n",
              "      <td>cbc1bc591c53301bceafa44dc626288fd92d2fc5dca438...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273056.0</td>\n",
              "      <td>31dbf829549b10917e7193a6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>b3e42abde4c35da06ff4746802b82678b1bf56b28efaa1...</td>\n",
              "      <td>09d41bf627188adc004b2db7c0a47578325952cc3340af...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273067.0</td>\n",
              "      <td>31dbf829549b10917e7193a6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>d0f2e1f76ff463bcd08302370cc2f9bf0ec1333a3b25e3...</td>\n",
              "      <td>1a631e8be3fd787c2891c15b9e9bac6df4f177efc9ec7b...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273058.0</td>\n",
              "      <td>3765d45e2eca88d1d1da7cef</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>0243b1305fd38f228634b23f69de5ed5ce801360eeffdc...</td>\n",
              "      <td>59aea81c00cccb5cd01ca2f7f72877d6bc73b427821986...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273059.0</td>\n",
              "      <td>c0d6760f6248ea8260e36fa5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>994</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>d3c11b862634e6185c22d7c89fc08f667527b39779cb41...</td>\n",
              "      <td>9f7742973dbe2b8d2b6bf1375abfd4e073f45450638fdc...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547830.0</td>\n",
              "      <td>3550678.0</td>\n",
              "      <td>b2897296e9402cce1ac00e73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>995</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>a6812a028da978a3ab462f2ca15080b5c91799eb932cf2...</td>\n",
              "      <td>6909a44a6bbe9771cc32842680dca931c924aa1b48ae6c...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547831.0</td>\n",
              "      <td>3550928.0</td>\n",
              "      <td>64ce8199950afc63fd21fe96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>996</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>02e216e963305f5bf68e992721e2cf95d927bab59b1c04...</td>\n",
              "      <td>576c557d87df01c2a8d8533ecc7a067aa484710e8a23bb...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547832.0</td>\n",
              "      <td>3550654.0</td>\n",
              "      <td>6e5816c3b9334f11d9e215b1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>997</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>5f679bd45fd663ebe3f425102bff77290e9700765b8266...</td>\n",
              "      <td>1cb644ae688049b36de4187db4f3cc6532a90bbdfabb35...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547831.0</td>\n",
              "      <td>3550743.0</td>\n",
              "      <td>c3a67200eaebd3d87534419d</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>998</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>166a8c34340bc933b112ae369c0bcb9ea43d0a8effb803...</td>\n",
              "      <td>ba7440e699693c0cf3f4f4cfe16e195a95c3837065d81a...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547832.0</td>\n",
              "      <td>3550809.0</td>\n",
              "      <td>e884aa64a6e22a1779f6f410</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>999 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-53c770b6-98d1-46d6-8605-937924a9b564')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-53c770b6-98d1-46d6-8605-937924a9b564 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-53c770b6-98d1-46d6-8605-937924a9b564');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ],
      "source": [
        "df.dropna()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "B0BtPj14dqYn"
      },
      "outputs": [],
      "source": [
        "from sklearn.model_selection import train_test_split"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "WkYeOI-uZGPN"
      },
      "outputs": [],
      "source": [
        "x = df[['task_name','start_time']]\n",
        "y = df[['end_time']]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "276o_0SaaliM"
      },
      "outputs": [],
      "source": [
        "x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.25, random_state=9)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "X6GqLqHGmGAu"
      },
      "source": [
        "#Linear regression"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "EtpM7AhJdkJP"
      },
      "outputs": [],
      "source": [
        "lin_reg_mod = LinearRegression()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "AUrZDCy6kvPH",
        "outputId": "4e79c406-97df-4956-ebfd-98dacb8cd5b6"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                     job_name  task_name  \\\n",
              "0    54670e2998350a9f0e4868d5          6   \n",
              "1    54670e2998350a9f0e4868d5          6   \n",
              "2    54670e2998350a9f0e4868d5          6   \n",
              "3    54670e2998350a9f0e4868d5          6   \n",
              "4    54670e2998350a9f0e4868d5          6   \n",
              "..                        ...        ...   \n",
              "994  259758d8ce7dab19c47c1cf9          6   \n",
              "995  259758d8ce7dab19c47c1cf9          6   \n",
              "996  259758d8ce7dab19c47c1cf9          6   \n",
              "997  259758d8ce7dab19c47c1cf9          6   \n",
              "998  259758d8ce7dab19c47c1cf9          6   \n",
              "\n",
              "                                             inst_name  \\\n",
              "0    c47ee192deea8c5aa87d8d7c2e02120cd03f75304a69dd...   \n",
              "1    92759a73039692b2d3e0929cadf55f5b07b40d6582c36f...   \n",
              "2    b3e42abde4c35da06ff4746802b82678b1bf56b28efaa1...   \n",
              "3    d0f2e1f76ff463bcd08302370cc2f9bf0ec1333a3b25e3...   \n",
              "4    0243b1305fd38f228634b23f69de5ed5ce801360eeffdc...   \n",
              "..                                                 ...   \n",
              "994  d3c11b862634e6185c22d7c89fc08f667527b39779cb41...   \n",
              "995  a6812a028da978a3ab462f2ca15080b5c91799eb932cf2...   \n",
              "996  02e216e963305f5bf68e992721e2cf95d927bab59b1c04...   \n",
              "997  5f679bd45fd663ebe3f425102bff77290e9700765b8266...   \n",
              "998  166a8c34340bc933b112ae369c0bcb9ea43d0a8effb803...   \n",
              "\n",
              "                                           worker_name  \\\n",
              "0    05b1590648df3f4c6deea2496bbbefd4d3ae93347669f7...   \n",
              "1    cbc1bc591c53301bceafa44dc626288fd92d2fc5dca438...   \n",
              "2    09d41bf627188adc004b2db7c0a47578325952cc3340af...   \n",
              "3    1a631e8be3fd787c2891c15b9e9bac6df4f177efc9ec7b...   \n",
              "4    59aea81c00cccb5cd01ca2f7f72877d6bc73b427821986...   \n",
              "..                                                 ...   \n",
              "994  9f7742973dbe2b8d2b6bf1375abfd4e073f45450638fdc...   \n",
              "995  6909a44a6bbe9771cc32842680dca931c924aa1b48ae6c...   \n",
              "996  576c557d87df01c2a8d8533ecc7a067aa484710e8a23bb...   \n",
              "997  1cb644ae688049b36de4187db4f3cc6532a90bbdfabb35...   \n",
              "998  ba7440e699693c0cf3f4f4cfe16e195a95c3837065d81a...   \n",
              "\n",
              "                                               inst_id  status  start_time  \\\n",
              "0    68889727c2257f702108d185e5eed342a39807a2893d4b...       3   3272995.0   \n",
              "1    68889727c2257f702108d185e5eed342a39807a2893d4b...       3   3272995.0   \n",
              "2    68889727c2257f702108d185e5eed342a39807a2893d4b...       3   3272995.0   \n",
              "3    68889727c2257f702108d185e5eed342a39807a2893d4b...       3   3272995.0   \n",
              "4    68889727c2257f702108d185e5eed342a39807a2893d4b...       3   3272995.0   \n",
              "..                                                 ...     ...         ...   \n",
              "994  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...       3   3547830.0   \n",
              "995  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...       3   3547831.0   \n",
              "996  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...       3   3547832.0   \n",
              "997  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...       3   3547831.0   \n",
              "998  b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...       3   3547832.0   \n",
              "\n",
              "      end_time                   machine  \n",
              "0    3273065.0  165261853e188ca69c4fbcdf  \n",
              "1    3273056.0  31dbf829549b10917e7193a6  \n",
              "2    3273067.0  31dbf829549b10917e7193a6  \n",
              "3    3273058.0  3765d45e2eca88d1d1da7cef  \n",
              "4    3273059.0  c0d6760f6248ea8260e36fa5  \n",
              "..         ...                       ...  \n",
              "994  3550678.0  b2897296e9402cce1ac00e73  \n",
              "995  3550928.0  64ce8199950afc63fd21fe96  \n",
              "996  3550654.0  6e5816c3b9334f11d9e215b1  \n",
              "997  3550743.0  c3a67200eaebd3d87534419d  \n",
              "998  3550809.0  e884aa64a6e22a1779f6f410  \n",
              "\n",
              "[999 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9481b0f8-6b16-4fdd-9306-b60692835d50\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>job_name</th>\n",
              "      <th>task_name</th>\n",
              "      <th>inst_name</th>\n",
              "      <th>worker_name</th>\n",
              "      <th>inst_id</th>\n",
              "      <th>status</th>\n",
              "      <th>start_time</th>\n",
              "      <th>end_time</th>\n",
              "      <th>machine</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>c47ee192deea8c5aa87d8d7c2e02120cd03f75304a69dd...</td>\n",
              "      <td>05b1590648df3f4c6deea2496bbbefd4d3ae93347669f7...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273065.0</td>\n",
              "      <td>165261853e188ca69c4fbcdf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>92759a73039692b2d3e0929cadf55f5b07b40d6582c36f...</td>\n",
              "      <td>cbc1bc591c53301bceafa44dc626288fd92d2fc5dca438...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273056.0</td>\n",
              "      <td>31dbf829549b10917e7193a6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>b3e42abde4c35da06ff4746802b82678b1bf56b28efaa1...</td>\n",
              "      <td>09d41bf627188adc004b2db7c0a47578325952cc3340af...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273067.0</td>\n",
              "      <td>31dbf829549b10917e7193a6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>d0f2e1f76ff463bcd08302370cc2f9bf0ec1333a3b25e3...</td>\n",
              "      <td>1a631e8be3fd787c2891c15b9e9bac6df4f177efc9ec7b...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273058.0</td>\n",
              "      <td>3765d45e2eca88d1d1da7cef</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>54670e2998350a9f0e4868d5</td>\n",
              "      <td>6</td>\n",
              "      <td>0243b1305fd38f228634b23f69de5ed5ce801360eeffdc...</td>\n",
              "      <td>59aea81c00cccb5cd01ca2f7f72877d6bc73b427821986...</td>\n",
              "      <td>68889727c2257f702108d185e5eed342a39807a2893d4b...</td>\n",
              "      <td>3</td>\n",
              "      <td>3272995.0</td>\n",
              "      <td>3273059.0</td>\n",
              "      <td>c0d6760f6248ea8260e36fa5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>994</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>d3c11b862634e6185c22d7c89fc08f667527b39779cb41...</td>\n",
              "      <td>9f7742973dbe2b8d2b6bf1375abfd4e073f45450638fdc...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547830.0</td>\n",
              "      <td>3550678.0</td>\n",
              "      <td>b2897296e9402cce1ac00e73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>995</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>a6812a028da978a3ab462f2ca15080b5c91799eb932cf2...</td>\n",
              "      <td>6909a44a6bbe9771cc32842680dca931c924aa1b48ae6c...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547831.0</td>\n",
              "      <td>3550928.0</td>\n",
              "      <td>64ce8199950afc63fd21fe96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>996</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>02e216e963305f5bf68e992721e2cf95d927bab59b1c04...</td>\n",
              "      <td>576c557d87df01c2a8d8533ecc7a067aa484710e8a23bb...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547832.0</td>\n",
              "      <td>3550654.0</td>\n",
              "      <td>6e5816c3b9334f11d9e215b1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>997</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>5f679bd45fd663ebe3f425102bff77290e9700765b8266...</td>\n",
              "      <td>1cb644ae688049b36de4187db4f3cc6532a90bbdfabb35...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547831.0</td>\n",
              "      <td>3550743.0</td>\n",
              "      <td>c3a67200eaebd3d87534419d</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>998</th>\n",
              "      <td>259758d8ce7dab19c47c1cf9</td>\n",
              "      <td>6</td>\n",
              "      <td>166a8c34340bc933b112ae369c0bcb9ea43d0a8effb803...</td>\n",
              "      <td>ba7440e699693c0cf3f4f4cfe16e195a95c3837065d81a...</td>\n",
              "      <td>b8dcabc5ed4723ef2321da505269e781ade92fd414fcc4...</td>\n",
              "      <td>3</td>\n",
              "      <td>3547832.0</td>\n",
              "      <td>3550809.0</td>\n",
              "      <td>e884aa64a6e22a1779f6f410</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>999 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9481b0f8-6b16-4fdd-9306-b60692835d50')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9481b0f8-6b16-4fdd-9306-b60692835d50 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9481b0f8-6b16-4fdd-9306-b60692835d50');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ],
      "source": [
        "df"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nXzMJlPAd3hu",
        "outputId": "7e975251-9473-4a01-a18d-ebb6b25c278c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ],
      "source": [
        "lin_reg_mod.fit(x_train, y_train)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "CT14aoivePie"
      },
      "outputs": [],
      "source": [
        "pred = lin_reg_mod.predict(x_test)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "dF26keDolap0"
      },
      "outputs": [],
      "source": [
        "test_set_rmse = (np.sqrt(mean_squared_error(y_test, pred)))\n",
        "\n",
        "test_set_r2 = r2_score(y_test, pred)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f7PJDL0Ilgvr",
        "outputId": "8753b9b6-9287-45b5-e4d7-6aa913b6f524"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "520888.05964911205\n",
            "0.7259932413186234\n"
          ]
        }
      ],
      "source": [
        "print(test_set_rmse)\n",
        "print(test_set_r2)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "IXd2IOGUmu9M"
      },
      "outputs": [],
      "source": [
        " df_prediction = pnd.DataFrame({'Actual': y_test.squeeze(), 'Predicted': pred.squeeze()})"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "lEjMtnOCnNdh",
        "outputId": "26d3eb19-6374-4a3f-fe32-4fe99b1444ca"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        Actual     Predicted\n",
              "2    3273067.0  3.306568e+06\n",
              "785  1459299.0  1.467725e+06\n",
              "57   3274734.0  3.306607e+06\n",
              "496  1442820.0  3.470124e+06\n",
              "611  1459282.0  1.467725e+06\n",
              "..         ...           ...\n",
              "41   3274694.0  3.306607e+06\n",
              "425  3278734.0  1.874425e+06\n",
              "106  3274697.0  3.306607e+06\n",
              "80   3274716.0  3.306607e+06\n",
              "471  3319771.0  3.307783e+06\n",
              "\n",
              "[250 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-38942fa7-0cd9-4577-b085-a1274ab5ec64\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Actual</th>\n",
              "      <th>Predicted</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3273067.0</td>\n",
              "      <td>3.306568e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>785</th>\n",
              "      <td>1459299.0</td>\n",
              "      <td>1.467725e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>3274734.0</td>\n",
              "      <td>3.306607e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>496</th>\n",
              "      <td>1442820.0</td>\n",
              "      <td>3.470124e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>611</th>\n",
              "      <td>1459282.0</td>\n",
              "      <td>1.467725e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>3274694.0</td>\n",
              "      <td>3.306607e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>425</th>\n",
              "      <td>3278734.0</td>\n",
              "      <td>1.874425e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>106</th>\n",
              "      <td>3274697.0</td>\n",
              "      <td>3.306607e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80</th>\n",
              "      <td>3274716.0</td>\n",
              "      <td>3.306607e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>471</th>\n",
              "      <td>3319771.0</td>\n",
              "      <td>3.307783e+06</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>250 rows × 2 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-38942fa7-0cd9-4577-b085-a1274ab5ec64')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-38942fa7-0cd9-4577-b085-a1274ab5ec64 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-38942fa7-0cd9-4577-b085-a1274ab5ec64');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ],
      "source": [
        "df_prediction"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 307
        },
        "id": "amQaUwdznR55",
        "outputId": "d340bc3a-8c0f-4630-f6f2-3a2fb9a53b92"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f1c1508fe50>"
            ]
          },
          "metadata": {},
          "execution_count": 31
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "import seaborn as sb\n",
        "sb.regplot(x = \"Actual\",\n",
        "            y = \"Predicted\", \n",
        "            ci = None,\n",
        "            data = df_prediction)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "kICQLAm9nmgp"
      },
      "outputs": [],
      "source": [
        "SEED = 42\n",
        "X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=SEED)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "P5a6h73KmGAy"
      },
      "source": [
        "#Random Forest"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "84zbPgXkowjf"
      },
      "outputs": [],
      "source": [
        "from sklearn.ensemble import RandomForestRegressor"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YLHiFBf3oLIY",
        "outputId": "9ca286a0-20e7-44f3-e62d-39a07b2a9e1d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-34-ad1b426d6a42>:3: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n",
            "  RF.fit(x_train, y_train)\n"
          ]
        }
      ],
      "source": [
        "RF = RandomForestRegressor(n_estimators=20, max_depth=3,  random_state=SEED)\n",
        "\n",
        "RF.fit(x_train, y_train)\n",
        "y_pred = RF.predict(x_test)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 357
        },
        "id": "YVOLoGYios7m",
        "outputId": "bf390b25-9794-45f0-8fd6-dd7b7896620f"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "from sklearn import tree\n",
        "\n",
        "features = x.columns\n",
        "first_tree = RF.estimators_[0]\n",
        "\n",
        "plt.figure(figsize=(15,6))\n",
        "tree.plot_tree(first_tree,\n",
        "               feature_names=features,\n",
        "               fontsize=8, \n",
        "               filled=True, \n",
        "               rounded=True);"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2a85dxQwo___",
        "outputId": "9de7fa1b-3df7-4df5-ca00-b72890fb4a62"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mean Absolute Error: 940338.9018500708\n",
            "Mean Squared Error: 976257452855.9856\n",
            "Root Mean Squared Error: 988057.4137447609\n"
          ]
        }
      ],
      "source": [
        "from sklearn.metrics import mean_absolute_error, mean_squared_error\n",
        "\n",
        "print('Mean Absolute Error:', mean_absolute_error(y_test, y_pred))\n",
        "print('Mean Squared Error:', mean_squared_error(y_test, y_pred))\n",
        "print('Root Mean Squared Error:', np.sqrt(mean_squared_error(y_test, y_pred)))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "jpgbDmgXpm9u",
        "outputId": "e20b4d1c-0010-404b-b7af-d1d35d6e797d"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "x = np.random.randint(low=1, high=10, size=25)\n",
        "\n",
        "plt.plot(x, color = 'blue', linewidth=3, linestyle='-.')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "cPTKJ2hTO3ch"
      },
      "outputs": [],
      "source": [
        "df[\"status\"] = df[\"status\"].astype(\"category\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uUfZoAOgRBFv",
        "outputId": "43bdf267-e838-4c8a-c6a8-c602bbd48292"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[3, 0, 2, 1]\n",
              "Categories (4, int64): [0, 1, 2, 3]"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ],
      "source": [
        "df.status.unique()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "-0rOpKBbP2GP"
      },
      "outputs": [],
      "source": [
        "x = df[['task_name','start_time','end_time']]\n",
        "y = df[['status']]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "dH5uCe7AQLaP"
      },
      "outputs": [],
      "source": [
        "x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.25, random_state=9)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "GmVvoYWcrAKm"
      },
      "outputs": [],
      "source": [
        "from tensorflow.keras.models import Sequential \n",
        "from tensorflow.keras.layers import InputLayer, Conv1D, Dense, Flatten, MaxPooling1D \n",
        "from keras.layers.convolutional import Conv1D\n",
        "from tensorflow.keras.optimizers import Adam "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pdvb93bDRiu1",
        "outputId": "f67fe356-0562-4728-a021-8dbe89e249b3"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "24/24 [==============================] - 1s 1ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 2/50\n",
            "24/24 [==============================] - 0s 1ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 3/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 4/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 5/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 6/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 7/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 8/50\n",
            "24/24 [==============================] - 0s 1ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 9/50\n",
            "24/24 [==============================] - 0s 1ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 10/50\n",
            "24/24 [==============================] - 0s 1ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 11/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 12/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 13/50\n",
            "24/24 [==============================] - 0s 1ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 14/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 15/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 16/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 17/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 18/50\n",
            "24/24 [==============================] - 0s 1ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 19/50\n",
            "24/24 [==============================] - 0s 1ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 20/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 21/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 22/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 23/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 24/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 25/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 26/50\n",
            "24/24 [==============================] - 0s 3ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 27/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 28/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 29/50\n",
            "24/24 [==============================] - 0s 1ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 30/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 31/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 32/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 33/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 34/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 35/50\n",
            "24/24 [==============================] - 0s 1ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 36/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 37/50\n",
            "24/24 [==============================] - 0s 1ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 38/50\n",
            "24/24 [==============================] - 0s 1ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 39/50\n",
            "24/24 [==============================] - 0s 1ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 40/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 41/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 42/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 43/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 44/50\n",
            "24/24 [==============================] - 0s 1ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 45/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 46/50\n",
            "24/24 [==============================] - 0s 1ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 47/50\n",
            "24/24 [==============================] - 0s 1ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 48/50\n",
            "24/24 [==============================] - 0s 1ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 49/50\n",
            "24/24 [==============================] - 0s 1ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "Epoch 50/50\n",
            "24/24 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0267\n",
            "8/8 [==============================] - 0s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0400\n",
            "\n",
            "accuracy: 4.00%\n"
          ]
        }
      ],
      "source": [
        "from keras.models import Sequential \n",
        "from keras.layers import Dense \n",
        "  \n",
        "model_cnn = Sequential() \n",
        "model_cnn.add(Dense(12, input_dim=3, activation='relu')) \n",
        "model_cnn.add(Dense(3, activation='relu')) \n",
        "model_cnn.add(Dense(1, activation='softmax'))  \n",
        "model_cnn.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy']) \n",
        "model_cnn.fit(x_train, y_train, epochs=50, batch_size=32) \n",
        "scores = model_cnn.evaluate(x_test, y_test) \n",
        "print(\"\\n%s: %.2f%%\" % (model_cnn.metrics_names[1], scores[1]*100)) "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "GgkqrEjLRixh"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "3zlQvj6bQ4HM"
      },
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8.5"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
